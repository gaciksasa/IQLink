@using IQLink.Helpers

<div class="sidebar-nav">
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link @IsActiveLink("Home", "Index")" asp-area="LipoDoc" asp-controller="Home" asp-action="Index">
                <i class="bi bi-house"></i> Dashboard
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @IsActiveLink("Devices")" asp-area="LipoDoc" asp-controller="Devices" asp-action="Index">
                <i class="bi bi-hdd-network"></i> Devices
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @IsActiveLink("Donations")" asp-area="LipoDoc" asp-controller="Donations" asp-action="Index">
                <i class="bi bi-droplet"></i> Donations
            </a>
        </li>
    </ul>
</div>

@functions {
    public string IsActiveLink(string controller, string action = "")
    {
        string currentController = ViewContext.RouteData.Values["Controller"]?.ToString() ?? "";
        string currentAction = ViewContext.RouteData.Values["Action"]?.ToString() ?? "";
        string currentArea = ViewContext.RouteData.Values["Area"]?.ToString() ?? "";

        // Always check that we're in the LipoDoc area
        if (currentArea != "LipoDoc")
        {
            return "";
        }

        if (string.Equals(currentController, controller, StringComparison.OrdinalIgnoreCase))
        {
            if (string.IsNullOrEmpty(action) || string.Equals(currentAction, action, StringComparison.OrdinalIgnoreCase))
            {
                return "active";
            }
        }

        return "";
    }
}